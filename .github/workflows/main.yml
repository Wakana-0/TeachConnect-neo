name: Nuitka Multi-Platform Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.13"]
        include:
          - os: ubuntu-latest
            artifact_suffix: linux
          - os: windows-latest
            artifact_suffix: windows
          - os: macos-latest
            artifact_suffix: macos
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y patchelf

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nuitka zstandard

    - name: Build with Nuitka
      run: |
        python -m nuitka \
          --standalone \
          --onefile \
          --output-dir=dist \
          --remove-output \
          --enable-plugin=pyside6 \
          --follow-imports \
          --include-data-file=./requirements.txt=./requirements.txt \
          main.py

    - name: Create release archive
      run: |
        cd dist
        if [ "$RUNNER_OS" = "Windows" ]; then
          7z a -tzip ../build-${{ matrix.artifact_suffix }}.zip *
        else
          zip -r ../build-${{ matrix.artifact_suffix }}.zip *
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.artifact_suffix }}
        path: build-${{ matrix.artifact_suffix }}.zip